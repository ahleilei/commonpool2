<configuration>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
	</appender>
	
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>logs/commonspool2.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"> 
			<fileNamePattern>logs/commonspool2.log.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<!-- 日志文件保留天数 -->
            <maxHistory>7</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <MaxFileSize>500MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
			<!-- 设置缓存输出 -->
            <immediateFlush>true</immediateFlush>
            <!-- 将pattern格式输出到日志文件中 -->
            <outputPatternAsHeader>true</outputPatternAsHeader>
		</encoder>
	</appender>
	
	<!-- 异步输出 -->  
	<appender name ="ASYNC" class= "ch.qos.logback.classic.AsyncAppender">  
		<!-- 默认情况下，当BlockingQueue还有20%容量，他将丢弃TRACE、DEBUG和INFO级别的event，只保留WARN和ERROR级别的event。为了保持所有的events，设置该值为0。 -->  
		<discardingThreshold >0</discardingThreshold>  
		<!--默认值为256 -->  
		<queueSize>80024</queueSize>  
		<!-- 添加附加的appender,最多只能添加一个 -->  
		<appender-ref ref ="FILE"/>  
	</appender>  
	
	<root level="INFO">
		<!--<appender-ref ref="ASYNC" />
		 控制台输出 -->
		<appender-ref ref="STDOUT" />
		
	</root>
</configuration> 